{"version":3,"file":"index.js","mappings":"4GAAA,cASa,EAAAA,UAAY,CAAIC,EAAWC,KACtC,MAAMC,EAA4B,GAClC,KAAI,IAAAC,SAAQH,GAYV,MAAM,IAAII,MAAM,kBAZC,CACjB,IAAIC,EACJ,MAAMC,EAAMN,EAAKO,OACjB,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IAAK,CACxB,MAAMG,EAAWR,EAAKK,GAClBJ,GAAyB,MAAfO,EAAIP,GAChBC,EAAIM,EAAIP,IAAWO,EAEnBN,EAAIG,GAAKG,GAMf,OAAON,I,+ECzBT,MAAMO,EAAYC,OAAOC,eACvBC,EAAc,GACdC,EAAYD,EAAYE,SACxBC,EAAUH,EAAYI,eACtBC,EAAcF,EAAQD,SACtBI,EAAwBD,EAAYE,KAAKT,QAU3C,SAASU,EAAeZ,GAEtB,IAAKA,GAA+B,oBAAxBK,EAAUM,KAAKX,GACzB,OAAO,EAGT,MAAMa,EAAQZ,EAAUD,GAGxB,IAAKa,EACH,OAAO,EAIT,MAAMC,EAAOP,EAAQI,KAAKE,EAAO,gBAAkBA,EAAME,YACzD,MACkB,mBAATD,GACPL,EAAYE,KAAKG,KAAUJ,EAYlB,EAAAM,SAAW,IAAIC,KAC1B,IAAIC,EACFC,EACAC,EACAC,EACAC,EACAzB,EAAI,EACJ0B,EAASN,EAAK,IAAM,GACtB,MAAMlB,EAASkB,EAAKlB,OA7CtB,IAAqBC,EAoDnB,IAJsB,iBAAXuB,IA3CW,mBALHvB,EAgD4BuB,IA3Ca,iBAAjBvB,EAAIwB,YA4C7CD,EAAS,IAGJ1B,EAAIE,EAAQF,IAEjB,GAA4B,QAAvBqB,EAAUD,EAAKpB,IAElB,IAAK,MAAM4B,KAAQP,EACjBC,EAAMI,EAAOE,GACbL,EAAOF,EAAQO,GAGXF,IAAWH,IAObA,IACCR,EAAeQ,KAAUC,EAAcK,MAAM/B,QAAQyB,MAElDC,GACFA,GAAc,EACdC,EAAQH,GAAOO,MAAM/B,QAAQwB,GAAOA,EAAM,IAE1CG,EAAQH,GAAOP,EAAeO,GAAOA,EAAM,GAI7CI,EAAOE,IAAQ,IAAAT,UAASM,EAAOF,SAGbO,IAATP,IACTG,EAAOE,GAAQL,IAOvB,OAAOG,I,6EC3FI,EAAA5B,QAAWH,GAA2C,iBAATA,GAAqBA,aAAgBkC,O,gFCDlF,EAAAE,UAAapC,KAAqC,MAARA,GAAyB,KAATA,I,oFCA1D,EAAAqC,cAAiB7B,IAC5B,GAAkB,iBAAPA,EACT,MAAM,IAAIJ,MAAM,qCAElB,IAAK,MAAM6B,KAAQzB,EACjB,OAAO,EAET,OAAO,KCXL8B,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBL,IAAjBM,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,IAOV,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,QCrBf,OACA,OACA,OACA,OACA,O","sources":["webpack://tutility/./src/core/createMap.ts","webpack://tutility/./src/core/deepClone.ts","webpack://tutility/./src/core/isArray.ts","webpack://tutility/./src/core/isDefined.ts","webpack://tutility/./src/core/isEmpty.ts","webpack://tutility/webpack/bootstrap","webpack://tutility/./src/index.ts"],"sourcesContent":["import { isArray } from './isArray';\r\n\r\n/**\r\n * Creates map {unique value data} for array of object {data} taking supplied key {objKey} into consideration.\r\n * @param {Array} data Array Object who's map is to be created.\r\n * @param {string} objKey Parameter against which key value is created for map.\r\n * @returns {Object} map of data element with respect to specified {objKey} where key is the objKey and\r\n * value is specific element.\r\n */\r\nexport const createMap = <T>(data: T[], objKey: string): { [key: string]: T } => {\r\n  const map: { [key: string]: T } = {};\r\n  if (isArray(data)) {\r\n    let i;\r\n    const len = data.length;\r\n    for (i = 0; i < len; i++) {\r\n      const obj: any = data[i];\r\n      if (objKey && obj[objKey] != null) {\r\n        map[obj[objKey]] = obj;\r\n      } else {\r\n        map[i] = obj;\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Required Array');\r\n  }\r\n  return map;\r\n}\r\n","const _getProto = Object.getPrototypeOf,\r\n  _class2type = {},\r\n  _toString = _class2type.toString,\r\n  _hasOwn = _class2type.hasOwnProperty,\r\n  _fnToString = _hasOwn.toString,\r\n  _ObjectFunctionString = _fnToString.call(Object);\r\n\r\nfunction _isFunction(obj: any) {\r\n  // Support: Chrome <=57, Firefox <=52\r\n  // In some browsers, typeof returns \"function\" for HTML <object> elements\r\n  // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\r\n  // We don't want to classify *any* DOM node as a function.\r\n  return typeof obj === 'function' && typeof obj.nodeType !== 'number';\r\n}\r\n\r\nfunction _isPlainObject(obj: any) {\r\n  // Detect obvious negatives\r\n  if (!obj || _toString.call(obj) !== '[object Object]') {\r\n    return false;\r\n  }\r\n\r\n  const proto = _getProto(obj);\r\n\r\n  // Objects with no prototype (e.g., `Object.create( null )`) are plain\r\n  if (!proto) {\r\n    return true;\r\n  }\r\n\r\n  // Objects with prototype are plain iff they were constructed by a global Object function\r\n  const Ctor = _hasOwn.call(proto, 'constructor') && proto.constructor;\r\n  return (\r\n    typeof Ctor === 'function' &&\r\n    _fnToString.call(Ctor) === _ObjectFunctionString\r\n  );\r\n}\r\n\r\n/**\r\n * Creates deep copy of all the passed object merging all the data into 1st parameter ( target object ).\r\n * @param {T} target - An object that will receive the new properties if additional objects are passed in.\r\n * @param {T} source1 - An object containing additional properties to merge in.\r\n * @param {Array<T>} sourceN - Additional objects containing properties to merge in.\r\n * @returns {T} Deep copied object containing all the properties of passed parameters.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nexport const deepCopy = (...args: any[]): boolean => {\r\n  let options,\r\n    src,\r\n    copy,\r\n    copyIsArray,\r\n    clone,\r\n    i = 1,\r\n    target = args[0] || {};\r\n  const length = args.length;\r\n\r\n  // Handle case when target is a string or something (possible in deep copy)\r\n  if (typeof target !== 'object' && !_isFunction(target)) {\r\n    target = {};\r\n  }\r\n\r\n  for (; i < length; i++) {\r\n    // Only deal with non-null/undefined values\r\n    if ((options = args[i]) !== null) {\r\n      // Extend the base object\r\n      for (const name in options) {\r\n        src = target[name];\r\n        copy = options[name];\r\n\r\n        // Prevent never-ending loop\r\n        if (target === copy) {\r\n          // eslint-disable-next-line no-continue\r\n          continue;\r\n        }\r\n\r\n        // Recurse if we're merging plain objects or arrays\r\n        if (\r\n          copy &&\r\n          (_isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))\r\n        ) {\r\n          if (copyIsArray) {\r\n            copyIsArray = false;\r\n            clone = src && Array.isArray(src) ? src : [];\r\n          } else {\r\n            clone = src && _isPlainObject(src) ? src : {};\r\n          }\r\n\r\n          // Never move original objects, clone them\r\n          target[name] = deepCopy(clone, copy);\r\n\r\n          // Don't bring in undefined values\r\n        } else if (copy !== undefined) {\r\n          target[name] = copy;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Return the modified object\r\n  return target;\r\n}\r\n","\r\n/**\r\n * Identifies if argument is Array or not.\r\n * @param {*} data Source data which need to be identitied if Array or not.\r\n * @returns {boolean} status as true if Array and false if not.\r\n */\r\nexport const isArray = (data: unknown): boolean => typeof data === 'object' && data instanceof Array\r\n","/**\r\n * Identifies if argument is defined or not that is its value should not be null, undefined or ''.\r\n * @param {*} data Source data which need to be identitied if Array or not.\r\n * @returns {boolean} status as true if Array and false if not.\r\n */\r\nexport const isDefined = (data: unknown): boolean => !(data == null || data === '')\r\n","/**\r\n * Identifies if Object is empty or not.\r\n * @param {*} obj Source data which need to be validated.\r\n * @returns {boolean} status as true if not an empty Object and false if empty.\r\n */\r\nexport const isEmptyObject = (obj: unknown): boolean => {\r\n  if (typeof obj != 'object') {\r\n    throw new Error('Invalid data type requires object');\r\n  }\r\n  for (const name in obj) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { deepCopy } from './core/deepClone';\r\nexport { isDefined } from './core/isDefined';\r\nexport { isEmptyObject } from './core/isEmpty';\r\nexport { createMap } from './core/createMap';\r\nexport { isArray } from './core/isArray';\r\n// export * from './core/isObject';\r\n// export * from './core/isBoolean';\r\n// export * from './core/sessionOperations';\r\n// export * from './core/localOperations';\r\n// export * from './core/isEqual';\r\n// export * from './core/isFunction';\r\n// export * from './core/hasKey';\r\n// export * from './core/multiSort';\r\n// export * from './core/noop';\r\n// export * from './core/debounce';"],"names":["createMap","data","objKey","map","isArray","Error","i","len","length","obj","_getProto","Object","getPrototypeOf","_class2type","_toString","toString","_hasOwn","hasOwnProperty","_fnToString","_ObjectFunctionString","call","_isPlainObject","proto","Ctor","constructor","deepCopy","args","options","src","copy","copyIsArray","clone","target","nodeType","name","Array","undefined","isDefined","isEmptyObject","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__"],"sourceRoot":""}